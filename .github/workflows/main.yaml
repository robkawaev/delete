name: "Build & Release"

on:
  push:
    branches:
      - main
      - master

env:
  JAVA_VERSION: "17.0.11"
  XCODE_VERSION: "15.0.1"
  FLUTTER_VERSION: "3.22.2"
  FLUTTER_CHANNEL: "stable"
  PACKAGE_NAME: "com.robertkawaev.flutter_template"
  PROPERTIES_PATH: "./android/key.properties"
  KEY_PATH: "./android/app/key.jks"

jobs:
  version:
    name: Version
    runs-on: macos-14
    steps:
      # ? Подготовка репозитория
      - name: Checkout
        uses: actions/checkout@v4

      # ? Установка версии
      - name: Set up version
        run: |
          VERSION=$(grep 'version: ' pubspec.yaml | sed 's/version: \([0-9.]*\)+[0-9]*/\1/')
          BUILD_NUMBER=${{ github.run_number }}
          NEW_VERSION="${VERSION}+${BUILD_NUMBER}"
          sed -i '' "s/version: .*/version: ${NEW_VERSION}/" pubspec.yaml
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      # ? Сохранение версии как артефакт
      - name: Save Version
        run: echo "NEW_VERSION=${NEW_VERSION}" > version.txt

      # ? Загрузка версии как артефакт
      - name: Upload Version
        uses: actions/upload-artifact@v4
        with:
          name: version-artifact
          path: version.txt

  android:
    name: Android
    needs: [version]
    runs-on: macos-14
    steps:
      # ? Подготовка репозитория
      - name: Checkout
        uses: actions/checkout@v4

      # ? Установка JDK
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{env.JAVA_VERSION}}

      # ? Установка Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}

      # ? Установка зависимостей Flutter
      - name: Flutter pub get
        run: |
          flutter clean
          flutter pub get

      # ? Загрузка версии
      - name: Download version
        uses: actions/download-artifact@v4
        with:
          name: version-artifact

      # ? Считывание версии
      - name: Read version
        id: read_version
        run: echo "NEW_VERSION=$(cat version.txt | cut -d '=' -f2)" >> $GITHUB_ENV

      # ? Установка версии
      - name: Set up version
        run: |
          sed -i '' "s/version: .*/version: ${NEW_VERSION}/" pubspec.yaml

      # ? Создание key.properties
      - name: Create key.properties
        run: |
          echo keyPassword=\${{ secrets.KEY_PASSWORD }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}
      
      # ? Создание key.jks
      - name: Create key.jks
        run: echo "${{ secrets.KEY_STORE }}" | base64 --decode > ${{env.KEY_PATH}}

      # ? Сборка проекта для Android
      - name: Build Android
        run: |
          flutter build apk --no-shrink
          flutter build appbundle

      # ? Загрузка артефактов
      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: |
            build/app/outputs/apk/release/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
  
  upload-android:
    name: Upload Android
    needs: [android]
    runs-on: macos-14
    steps:
      # ? Загрузка артефактов для Android
      - name: Download Android Artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-artifacts
      
      # ? Загрузка в Google Play
      - name: Upload to Google Play 
        uses: r0adkll/upload-google-play@v1
        with:
          track: internal
          packageName: ${{env.PACKAGE_NAME}}
          releaseFiles: bundle/release/app-release.aab
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_JSON }}

  ios:
    name: iOS
    needs: [version]
    runs-on: macos-14
    steps:
      # ? Подготовка репозитория
      - name: Checkout
        uses: actions/checkout@v4

      # ? Установка нужной версии Xcode
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{env.XCODE_VERSION}}

      # ? Установка Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}

      # ? Установка зависимостей Flutter
      - name: Flutter pub get
        run: |
          flutter clean
          flutter pub get

      # ? Загрузка версии
      - name: Download version
        uses: actions/download-artifact@v4
        with:
          name: version-artifact

      # ? Считывание версии
      - name: Read version
        id: read_version
        run: echo "NEW_VERSION=$(cat version.txt | cut -d '=' -f2)" >> $GITHUB_ENV

      # ? Установка версии
      - name: Set up version
        run: |
          sed -i '' "s/version: .*/version: ${NEW_VERSION}/" pubspec.yaml

      # ? Сборка проекта для iOS
      - name: Build iOS
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload

      # ? Загрузка артефактов
      - name: Upload iOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-artifacts
          path: build/ios/iphoneos/app.ipa

  upload-ios:
    name: Upload iOS
    needs: [ios]
    runs-on: macos-14
    steps:
      # ? Загрузка артефактов для iOS
      - name: Download iOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios-artifacts

  release:
    name: Release
    needs: [upload-android, upload-ios]
    runs-on: macos-14
    steps:
      # ? Загрузка версии
      - name: Download version
        uses: actions/download-artifact@v4
        with:
          name: version-artifact

      # ? Считывание версии
      - name: Read version
        id: read_version
        run: echo "NEW_VERSION=$(cat version.txt | cut -d '=' -f2)" >> $GITHUB_ENV

      # ? Загрузка артефактов для Android
      - name: Download Android Artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-artifacts

      # ? Загрузка артефактов для iOS
      - name: Download iOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios-artifacts

      # ? Чек папки
      - name: List files
        run: |
          ls -R

      # ? Загрузка изменений в GitHub Releases
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            apk/release/app-release.apk
            bundle/release/app-release.aab
            app.ipa
          tag: v${{ env.NEW_VERSION }}
          token: ${{ secrets.TOKEN }}
